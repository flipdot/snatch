name: CI/CD
on:
  workflow_dispatch:
  push:

env:
  DOCKER_BUILDKIT: 1

jobs:
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache-dependency-path: "frontend/package-lock.json"

      - run: npm ci
      - run: npm run format-ci
      - run: npm test
      - run: npm run build

  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2.3.0

      - run: poetry install
      - run: poetry run pytest -m "not slow" -r fsx

  build-images:
    name: Build Container Images
    needs: [ build-frontend, build-backend ]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    strategy:
      fail-fast: true
      matrix:
        component: [frontend, backend]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}-${{ matrix.component }}

      - uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set release version
        id: version
        shell: bash
        run: |
          git fetch --prune --unshallow
          echo "::set-output name=release::$(git describe --tags --dirty)"

      - name: Build ${{ matrix.component }} image
        uses: docker/build-push-action@v4
        with:
          push: true
          context: ${{ matrix.component }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          build-args: RELEASE=${{ steps.version.outputs.release }}